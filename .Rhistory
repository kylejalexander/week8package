#' triangle_side
triangle_side <- function(side_a = NULL, side_b = NULL, side_c = NULL) {
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.nullc(side_a, side_b, side_c))
if (sides_input != 2){
stop("You must input exactly two sides")
}
#' Calculates hypotenuse from sides a and b
if(side_c = NULL){
#' Calculates hypotenuse from sides a and b
if(side_c == NULL){
return( sqrt( side_a^2 + side_b^2 ))
}
#' calculates side a if side b and hypotenuse (side c) are given
if(side_a == NULL){
return( sqrt( side_c^2 - side_b^2))
}
side_a <-3
side_b <-4
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.nullc(side_a, side_b, side_c))
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.null(c(side_a, side_b, side_c)))
triangle_side <- function(side_a = NULL, side_b = NULL, side_c = NULL) {
side_a <-3
side_b <-4
side_c <-NULL
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.null(c(side_a, side_b, side_c)))
if (sides_input != 2){
stop("You must input exactly two sides")
}
#' Calculates hypotenuse from sides a and b
if(side_c == NULL){
return( sqrt( side_a^2 + side_b^2 ))
}
#' calculates side b if side a and hypotenuse (side c) are given
if(is.null(side_b)){
return( sqrt( side_c^2 - side_a^2))
}
#' triangle_side
triangle_side <- function(side_a = NULL, side_b = NULL, side_c = NULL) {
side_a <-3
side_b <-4
side_c <-NULL
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.null(c(side_a, side_b, side_c)))
if (sides_input != 2){
stop("You must input exactly two sides")
}
#' Calculates hypotenuse from sides a and b
if(is.null(side_c)){
return( sqrt( side_a^2 + side_b^2 ))
}
#' calculates side a if side b and hypotenuse (side c) are given
if(is.null(side_a)){
return( sqrt( side_c^2 - side_b^2))
}
#' calculates side b if side a and hypotenuse (side c) are given
if(is.null(side_b)){
return( sqrt( side_c^2 - side_a^2))
}
}
if (sides_input != 2){
stop("You must input exactly two sides")
}
if(is.null(side_c)){
return( sqrt( side_a^2 + side_b^2 ))
}
#' triangle_side
triangle_side <- function(side_a = NULL, side_b = NULL, side_c = NULL) {
side_a <-3
side_b <-4
side_c <-NULL
#' Checks if only two sides were inputted into the function
sides_input <- sum(!is.null(c(side_a, side_b, side_c)))
if (sides_input != 2){
stop("You must input exactly two sides")
}
#' Calculates hypotenuse from sides a and b
if(is.null(side_c)){
return( sqrt( side_a^2 + side_b^2 ))
}
#' calculates side a if side b and hypotenuse (side c) are given
if(is.null(side_a)){
return( sqrt( side_c^2 - side_b^2))
}
#' calculates side b if side a and hypotenuse (side c) are given
if(is.null(side_b)){
return( sqrt( side_c^2 - side_a^2))
}
}
prit(mean(c(1,7,3,2,5)))
c(1,7,3,2,5)
mean(c(1,7,3,2,5))
print(mean(c(1,7,3,2,5)))
x <- (mean(c(1,7,3,2,5)))
x <- (mean(c(1,7,3,2,5)))
x <- mean(c(1,7,3,2,5))
x <- mean(c(1,7,3,2,5))
devtools::check()
devtools::check()
